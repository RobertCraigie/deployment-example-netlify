generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  authorId  Int
  content   String?
  createdAt DateTime @default(now())
  id        Int      @default(autoincrement()) @id
  published Boolean  @default(false)
  title     String
  User      User     @relation(fields: [authorId], references: [id])
}

model Profile {
  bio    String?
  id     Int     @default(autoincrement()) @id
  userId Int     @unique
  User   User    @relation(fields: [userId], references: [id])
}

model User {
  email   String   @unique
  id      Int      @default(autoincrement()) @id
  name    String?
  Post    Post[]
  Profile Profile?
}

model nextauth_accounts {
  access_token         String?
  access_token_expires DateTime?
  compound_id          String    @unique
  created_at           DateTime  @default(now())
  id                   Int       @default(dbgenerated()) @id
  provider_account_id  String
  provider_id          String
  provider_type        String
  refresh_token        String?
  updated_at           DateTime  @default(now())
  user_id              Int

  @@index([provider_account_id], name: "provider_account_id")
  @@index([provider_id], name: "provider_id")
  @@index([user_id], name: "user_id")
}

model nextauth_sessions {
  access_token  String   @unique
  created_at    DateTime @default(now())
  expires       DateTime
  id            Int      @default(dbgenerated()) @id
  session_token String   @unique
  updated_at    DateTime @default(now())
  user_id       Int
}

model nextauth_users {
  created_at     DateTime  @default(now())
  email          String?   @unique
  email_verified DateTime?
  id             Int       @default(dbgenerated()) @id
  image          String?
  is_booster     Boolean   @default(false)
  name           String?
  updated_at     DateTime  @default(now())
}

model nextauth_verification_requests {
  created_at DateTime @default(now())
  expires    DateTime
  id         Int      @default(dbgenerated()) @id
  identifier String
  token      String   @unique
  updated_at DateTime @default(now())
}